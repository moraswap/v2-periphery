/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Rewarder } from "../Rewarder";

export class Rewarder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _rewardToken: string,
    _lpToken: string,
    _rewardPerSecond: BigNumberish,
    _chef: string,
    _startTime: BigNumberish,
    overrides?: Overrides
  ): Promise<Rewarder> {
    return super.deploy(
      _rewardToken,
      _lpToken,
      _rewardPerSecond,
      _chef,
      _startTime,
      overrides || {}
    ) as Promise<Rewarder>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _lpToken: string,
    _rewardPerSecond: BigNumberish,
    _chef: string,
    _startTime: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _lpToken,
      _rewardPerSecond,
      _chef,
      _startTime,
      overrides || {}
    );
  }
  attach(address: string): Rewarder {
    return super.attach(address) as Rewarder;
  }
  connect(signer: Signer): Rewarder__factory {
    return super.connect(signer) as Rewarder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Rewarder {
    return new Contract(address, _abi, signerOrProvider) as Rewarder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_chef",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetRewardPerSecond",
    type: "event",
  },
  {
    inputs: [],
    name: "chef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "reclaimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accRewardPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLp",
            type: "uint256",
          },
        ],
        internalType: "struct Rewarder.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516200122738038062001227833981016040819052610031916100dc565b600061003b6100d8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606095861b811660805293851b841660a052600592909255831b90911660c05260408051928301815260008084526020840183905292018290526001829055600255600355610154565b3390565b600080600080600060a086880312156100f3578081fd5b85516100fe8161013c565b602087015190955061010f8161013c565b6040870151606088015191955093506101278161013c565b80925050608086015190509295509295909350565b6001600160a01b038116811461015157600080fd5b50565b60805160601c60a05160601c60c05160601c6110896200019e6000398061020b528061044052508061023b5250806104e1528061059252806105cb52806108e852506110896000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638f10369a1161008c578063e3161ddd11610066578063e3161ddd146101ad578063f2fde38b146101c2578063f430cf0d146101d5578063f7c618c1146101e8576100ea565b80638f10369a14610172578063c1ea386814610187578063c37232881461019a576100ea565b80635fcbd285116100c85780635fcbd2851461014557806366da58151461014d578063715018a6146101625780638da5cb5b1461016a576100ea565b80631959a002146100ef5780631fc8bc5d146101195780635a2f3d091461012e575b600080fd5b6101026100fd366004610beb565b6101f0565b604051610110929190610fe7565b60405180910390f35b610121610209565b6040516101109190610cdf565b61013661022d565b60405161011093929190610ff5565b610121610239565b61016061015b366004610c93565b61025d565b005b6101606102f4565b61012161037d565b61017a61038d565b6040516101109190610fde565b610160610195366004610c32565b610393565b6101606101a8366004610c07565b610435565b6101b561067c565b6040516101109190610fbd565b6101606101d0366004610beb565b610731565b61017a6101e3366004610c07565b6107f1565b6101216108e6565b6004602052600090815260409020805460019091015482565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015460025460035483565b7f000000000000000000000000000000000000000000000000000000000000000081565b61026561090a565b6001600160a01b031661027661037d565b6001600160a01b0316146102a55760405162461bcd60e51b815260040161029c90610eb1565b60405180910390fd5b6102ad61067c565b5060058054908290556040517fcf46b21c204617ffb815b827463db479e0f3cdc9586e33690d10ced9541fcda0906102e89083908590610fe7565b60405180910390a15050565b6102fc61090a565b6001600160a01b031661030d61037d565b6001600160a01b0316146103335760405162461bcd60e51b815260040161029c90610eb1565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b60055481565b61039b61090a565b6001600160a01b03166103ac61037d565b6001600160a01b0316146103d25760405162461bcd60e51b815260040161029c90610eb1565b6001600160a01b03831661041c576040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610416573d6000803e3d6000fd5b50610430565b6104306001600160a01b038416828461090e565b505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047d5760405162461bcd60e51b815260040161029c90610ee6565b61048561067c565b506001600160a01b0382166000908152600460205260408120805460019290156105f4576001820154835483546104db92916104d591670de0b6b3a7640000916104cf9190610964565b906109a5565b906109d7565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161052b9190610cdf565b60206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190610cab565b9050808211156105be576105b96001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016878361090e565b6105f2565b6105f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016878461090e565b505b8154600284015461060a91906104d590876109ff565b6002840155838255825461062d90670de0b6b3a7640000906104cf908790610964565b60018301556040516001600160a01b038616907fd1072bb52c3131d0c96197b73fb8a45637e30f8b6664fc142310cc9b242859b49061066d908490610fde565b60405180910390a25050505050565b610684610bca565b5060408051606081018252600154815260025460208201819052600354928201929092529042111561038a57604081015180156107155760006106d48360200151426109d790919063ffffffff16565b905060006106ed6005548361096490919063ffffffff16565b9050610710610708846104cf84670de0b6b3a7640000610964565b8551906109ff565b845250505b5042602082018190528151600155600255604081015160035590565b61073961090a565b6001600160a01b031661074a61037d565b6001600160a01b0316146107705760405162461bcd60e51b815260040161029c90610eb1565b6001600160a01b0381166107965760405162461bcd60e51b815260040161029c90610d3f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006107fb610bca565b5060408051606081018252600154815260025460208083019182526003548385019081526001600160a01b03881660009081526004909252939020825193519151929390929091904211801561085057508015155b156108ae57600061086e8560200151426109d790919063ffffffff16565b905060006108876005548361096490919063ffffffff16565b90506108a96108a2846104cf84670de0b6b3a7640000610964565b85906109ff565b935050505b6108d983600101546104d5670de0b6b3a76400006104cf86886000015461096490919063ffffffff16565b9450505050505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b6104308363a9059cbb60e01b848460405160240161092d929190610cf3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a24565b600082610973575060006108e0565b8282028284828161098057fe5b041461099e5760405162461bcd60e51b815260040161029c90610e70565b9392505050565b60008082116109c65760405162461bcd60e51b815260040161029c90610e39565b8183816109cf57fe5b049392505050565b6000828211156109f95760405162461bcd60e51b815260040161029c90610dbc565b50900390565b60008282018381101561099e5760405162461bcd60e51b815260040161029c90610d85565b6060610a79826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ab39092919063ffffffff16565b8051909150156104305780806020019051810190610a979190610c73565b6104305760405162461bcd60e51b815260040161029c90610f73565b6060610ac28484600085610aca565b949350505050565b606082471015610aec5760405162461bcd60e51b815260040161029c90610df3565b610af585610b8b565b610b115760405162461bcd60e51b815260040161029c90610f3c565b60006060866001600160a01b03168587604051610b2e9190610cc3565b60006040518083038185875af1925050503d8060008114610b6b576040519150601f19603f3d011682016040523d82523d6000602084013e610b70565b606091505b5091509150610b80828286610b91565b979650505050505050565b3b151590565b60608315610ba057508161099e565b825115610bb05782518084602001fd5b8160405162461bcd60e51b815260040161029c9190610d0c565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215610bfc578081fd5b813561099e8161103b565b60008060408385031215610c19578081fd5b8235610c248161103b565b946020939093013593505050565b600080600060608486031215610c46578081fd5b8335610c518161103b565b9250602084013591506040840135610c688161103b565b809150509250925092565b600060208284031215610c84578081fd5b8151801515811461099e578182fd5b600060208284031215610ca4578081fd5b5035919050565b600060208284031215610cbc578081fd5b5051919050565b60008251610cd581846020870161100b565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152610d2b81604085016020870161100b565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526036908201527f6f6e6c794d6173746572436865663a206f6e6c79204d6173746572436865662060408201527531b0b71031b0b636103a3434b990333ab731ba34b7b760511b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b81518152602080830151908201526040918201519181019190915260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60005b8381101561102657818101518382015260200161100e565b83811115611035576000848401525b50505050565b6001600160a01b038116811461105057600080fd5b5056fea26469706673582212201f39fba867eed2b84e41685b860848be704f03c20696381d42dccdb7fde3669f64736f6c634300060c0033";
